<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
	    http://www.springframework.org/schema/security
    	http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

		<http>
		<form-login login-page ="/main/member/login" default-target-url="/main/index" />
		<logout logout-success-url="/main/index" invalidate-session="true"/>		
			<intercept-url pattern="/main/member/mypage/**" access="hasRole('ROLE_MEMBER')"/>
			<csrf disabled="true"/>
		</http>
		
		<authentication-manager>
			<authentication-provider>
				
				<!-- 
				<password-encoder hash="bcrypt"></password-encoder>
				
				<jdbc-user-service data-source-ref="dataSource"
				 users-by-username-query="select id, pwd password, 1 enabled from Member where id=?"
				 authorities-by-username-query="select memberId id, roleId authority from MemberRole where memberId=?"
				/>
				 -->
				<user-service>
					<user name="sist" password="{noop}sist" authorities="ROLE_MEMBER"/>
					<user name="dragon" password="{noop}sist" authorities="ROLE_MEMBER,ROLE_ADMIN,ROLE_AUTHOR"/>
				</user-service>
				
			</authentication-provider>
		</authentication-manager>
	
	 

</beans:beans>